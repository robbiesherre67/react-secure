name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Frontend: install, lint, test & coverage
        run: |
          cd react-secure
          npm install
          npm run lint
          npm test
          npm run coverage

      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: react-secure/coverage/lcov.info
          flags: frontend
          fail_ci_if_error: true

  backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: reactsecure
          MYSQL_USER: reactuser
          MYSQL_PASSWORD: StrongPass123!
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Backend: install, lint, migrate & test
        run: |
          cd react-secure/backend
          composer install --no-interaction --no-progress
          composer lint
          # Wait for MySQL
          for i in {1..30}; do
            mysql -h127.0.0.1 -uroot -prootpassword -e "SELECT 1" && break
            echo "Waiting for MySQL… ($i)"
            sleep 2
          done
          # Import schema
          mysql -h127.0.0.1 -uroot -prootpassword reactsecure < schema.sql
          # Start PHP server in background
          php -S 127.0.0.1:8000 -t . &
          # Wait for API
          for i in {1..20}; do
            curl --silent --fail http://127.0.0.1:8000/register.php && break
            echo "Waiting for PHP… ($i)"
            sleep 2
          done
          # Run your test script
          bash test-backend.sh
