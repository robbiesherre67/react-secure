name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run front-end tests
        run: npm test

  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    env:
      DB_HOST: 127.0.0.1
      DB_NAME: reactsecure
      DB_USER: reactuser
      DB_PASS: StrongPass123!
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: reactsecure
          MYSQL_USER: reactuser
          MYSQL_PASSWORD: StrongPass123!
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: pdo_mysql

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            mysqladmin ping \
              -h "${{ env.DB_HOST }}" \
              -u "${{ env.DB_USER }}" \
              -p"${{ env.DB_PASS }}" --silent && break
            echo "Waiting for MySQLâ€¦ ($i)"
            sleep 2
          done

      - name: Import database schema
        run: |
          mysql \
            -h "${{ env.DB_HOST }}" \
            -u "${{ env.DB_USER }}" \
            -p"${{ env.DB_PASS }}" \
            "${{ env.DB_NAME }}" < schema.sql

      - name: Start PHP built-in server
        run: php -S 0.0.0.0:8000 -t . &

      - name: Run backend API tests
        run: ./test-backend.sh
