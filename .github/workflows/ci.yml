name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./react-secure  # front-end lives here
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run front-end lint
        # explicitly point at your CommonJS config
        run: npx eslint -c .eslintrc.cjs "src/**/*.{js,jsx,ts,tsx}"

      - name: Run front-end tests
        run: npm test

      - name: Generate coverage report
        run: npm run coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info
          flags: frontend
          fail_ci_if_error: true

  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./react-secure/backend  # PHP backend folder
    env:
      DB_HOST: 127.0.0.1
      DB_NAME: reactsecure
      DB_USER: reactuser
      DB_PASS: StrongPass123!
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: reactsecure
          MYSQL_USER: reactuser
          MYSQL_PASSWORD: StrongPass123!
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: pdo_mysql

      - name: Install PHP dev dependencies
        run: composer install --no-interaction --no-progress

      - name: Run back-end lint
        run: composer lint

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            mysql -h127.0.0.1 -uroot -prootpassword -e "SELECT 1" && break
            echo "Waiting for MySQL… ($i)"
            sleep 2
          done

      - name: Import database schema
        run: |
          mysql -h127.0.0.1 -uroot -prootpassword reactsecure < schema.sql

      - name: Start PHP built-in server
        run: php -S 127.0.0.1:8000 -t .

      - name: Wait for PHP endpoint
        run: |
          for i in {1..20}; do
            curl --silent --fail http://127.0.0.1:8000/register.php && break
            echo "Waiting for PHP… ($i)"
            sleep 2
          done

      - name: Run backend tests
        run: bash test-backend.sh
